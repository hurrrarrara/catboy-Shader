[
  {"label": "const", "type": "keyword", "info": "Specifies that a variable's value cannot be changed after initialization."},
  {"label": "in", "type": "keyword", "info": "Declares an input variable to a shader stage."},
  {"label": "out", "type": "keyword", "info": "Declares an output variable from a shader stage."},
  {"label": "uniform", "type": "keyword", "info": "Declares a variable whose value remains constant across all shader executions."},
  {"label": "struct", "type": "keyword", "info": "Defines a user-defined data type."},
  {"label": "void", "type": "type", "info": "Specifies that a function does not return a value."},
  {"label": "bool", "type": "type", "info": "Boolean type representing true or false."},
  {"label": "int", "type": "type", "info": "Integer type."},
  {"label": "uint", "type": "type", "info": "Unsigned integer type."},
  {"label": "float", "type": "type", "info": "Floating-point type."},
  {"label": "vec2", "type": "type", "info": "2-component vector of floats."},
  {"label": "vec3", "type": "type", "info": "3-component vector of floats."},
  {"label": "vec4", "type": "type", "info": "4-component vector of floats."},
  {"label": "bvec2", "type": "type", "info": "2-component vector of booleans."},
  {"label": "bvec3", "type": "type", "info": "3-component vector of booleans."},
  {"label": "bvec4", "type": "type", "info": "4-component vector of booleans."},
  {"label": "ivec2", "type": "type", "info": "2-component vector of integers."},
  {"label": "ivec3", "type": "type", "info": "3-component vector of integers."},
  {"label": "ivec4", "type": "type", "info": "4-component vector of integers."},
  {"label": "uvec2", "type": "type", "info": "2-component vector of unsigned integers."},
  {"label": "uvec3", "type": "type", "info": "3-component vector of unsigned integers."},
  {"label": "uvec4", "type": "type", "info": "4-component vector of unsigned integers."},
  {"label": "mat2", "type": "type", "info": "2x2 matrix of floats."},
  {"label": "mat3", "type": "type", "info": "3x3 matrix of floats."},
  {"label": "mat4", "type": "type", "info": "4x4 matrix of floats."},
  {"label": "mat2x2", "type": "type", "info": "2x2 matrix of floats."},
  {"label": "mat2x3", "type": "type", "info": "2x3 matrix of floats."},
  {"label": "mat2x4", "type": "type", "info": "2x4 matrix of floats."},
  {"label": "mat3x2", "type": "type", "info": "3x2 matrix of floats."},
  {"label": "mat3x3", "type": "type", "info": "3x3 matrix of floats."},
  {"label": "mat3x4", "type": "type", "info": "3x4 matrix of floats."},
  {"label": "mat4x2", "type": "type", "info": "4x2 matrix of floats."},
  {"label": "mat4x3", "type": "type", "info": "4x3 matrix of floats."},
  {"label": "mat4x4", "type": "type", "info": "4x4 matrix of floats."},
  {"label": "sampler2D", "type": "type", "info": "2D texture sampler."},
  {"label": "sampler2DArray", "type": "type", "info": "2D texture array sampler."},
  {"label": "radians", "type": "function", "info": "Converts degrees to radians."},
  {"label": "degrees", "type": "function", "info": "Converts radians to degrees."},
  {"label": "sin", "type": "function", "info": "Computes the sine of an angle."},
  {"label": "cos", "type": "function", "info": "Computes the cosine of an angle."},
  {"label": "tan", "type": "function", "info": "Computes the tangent of an angle."},
  {"label": "asin", "type": "function", "info": "Computes the inverse sine of a value."},
  {"label": "acos", "type": "function", "info": "Computes the inverse cosine of a value."},
  {"label": "atan", "type": "function", "info": "Computes the inverse tangent of a value."},
  {"label": "sinh", "type": "function", "info": "Computes the hyperbolic sine of a value."},
  {"label": "cosh", "type": "function", "info": "Computes the hyperbolic cosine of a value."},
  {"label": "tanh", "type": "function", "info": "Computes the hyperbolic tangent of a value."},
  {"label": "asinh", "type": "function", "info": "Computes the inverse hyperbolic sine of a value."},
  {"label": "acosh", "type": "function", "info": "Computes the inverse hyperbolic cosine of a value."},
  {"label": "atanh", "type": "function", "info": "Computes the inverse hyperbolic tangent of a value."},
  {"label": "pow", "type": "function", "info": "Computes x raised to the power of y."},
  {"label": "exp", "type": "function", "info": "Computes the exponential of a value."},
  {"label": "log", "type": "function", "info": "Computes the natural logarithm of a value."},
  {"label": "exp2", "type": "function", "info": "Computes 2 raised to the power of x."},
 {"label": "log2", "type": "function", "info": "Computes the base-2 logarithm of a number."},
  {"label": "sqrt", "type": "function", "info": "Returns the square root of a number."},
  {"label": "inversesqrt", "type": "function", "info": "Returns the inverse square root of a number."},
  {"label": "abs", "type": "function", "info": "Returns the absolute value of a number."},
  {"label": "sign", "type": "function", "info": "Returns the sign of a number (-1, 1, or 0)."},
  {"label": "floor", "type": "function", "info": "Rounds a number down to the nearest integer."},
  {"label": "trunc", "type": "function", "info": "Removes the fractional part of a number."},
  {"label": "round", "type": "function", "info": "Rounds a number to the nearest integer."},
  {"label": "roundEven", "type": "function", "info": "Rounds to the nearest even integer."},
  {"label": "ceil", "type": "function", "info": "Rounds a number up to the nearest integer."},
  {"label": "fract", "type": "function", "info": "Returns the fractional part of a number."},
  {"label": "mod", "type": "function", "info": "Returns the remainder of x / y."},
  {"label": "modf", "type": "function", "info": "Splits a number into its integer and fractional parts."},
  {"label": "min", "type": "function", "info": "Returns the smaller of two values."},
  {"label": "max", "type": "function", "info": "Returns the larger of two values."},
  {"label": "clamp", "type": "function", "info": "Clamps a value between a minimum and maximum."},
  {"label": "mix", "type": "function", "info": "Interpolates between two values."},
  {"label": "step", "type": "function", "info": "Performs a step function."},
  {"label": "smoothstep", "type": "function", "info": "Performs smooth interpolation between two values."},
  {"label": "isnan", "type": "function", "info": "Checks if a value is NaN."},
  {"label": "isinf", "type": "function", "info": "Checks if a value is infinite."},
  {"label": "fma", "type": "function", "info": "Performs fused multiply-add."},
  {"label": "length", "type": "function", "info": "Returns the magnitude of a vector."},
  {"label": "distance", "type": "function", "info": "Returns the distance between two points."},
  {"label": "dot", "type": "function", "info": "Returns the dot product of two vectors."},
  {"label": "cross", "type": "function", "info": "Returns the cross product of two vectors."},
  {"label": "normalize", "type": "function", "info": "Normalizes a vector to unit length."},
  {"label": "faceforward", "type": "function", "info": "Computes a vector facing a direction."},
  {"label": "reflect", "type": "function", "info": "Reflects a vector across a surface."},
  {"label": "refract", "type": "function", "info": "Refracts a vector through a surface."},
  {"label": "matrixCompMult", "type": "function", "info": "Performs component-wise matrix multiplication."},
  {"label": "outerProduct", "type": "function", "info": "Computes the outer product of two vectors."},
  {"label": "transpose", "type": "function", "info": "Returns the transpose of a matrix."},
  {"label": "determinant", "type": "function", "info": "Returns the determinant of a matrix."},
  {"label": "inverse", "type": "function", "info": "Returns the inverse of a matrix."},
  {"label": "lessThan", "type": "function", "info": "Checks if x is less than y."},
  {"label": "lessThanEqual", "type": "function", "info": "Checks if x is less than or equal to y."},
  {"label": "greaterThan", "type": "function", "info": "Checks if x is greater than y."},
  {"label": "greaterThanEqual", "type": "function", "info": "Checks if x is greater than or equal to y."},
  {"label": "equal", "type": "function", "info": "Checks if x is equal to y."},
  {"label": "notEqual", "type": "function", "info": "Checks if x is not equal to y."},
  {"label": "any", "type": "function", "info": "Checks if any component of a vector is non-zero."},
  {"label": "all", "type": "function", "info": "Checks if all components of a vector are non-zero."},
  {"label": "not", "type": "function", "info": "Performs logical negation."},
  {"label": "textureSize", "type": "function", "info": "Returns the dimensions of a texture."},
  {"label": "texture", "type": "function", "info": "Samples a texture at specified coordinates."},
  {"label": "textureProj", "type": "function", "info": "Projects texture coordinates and samples."},
  {"label": "textureLod", "type": "function", "info": "Samples a texture at a specified LOD."},
  {"label": "textureOffset", "type": "function", "info": "Samples a texture with an offset."},
  {"label": "dFdx", "type": "function", "info": "Computes the derivative in the x-direction."},
  {"label": "dFdy", "type": "function", "info": "Computes the derivative in the y-direction."},
  {"label": "dFdxFine", "type": "function", "info": "Fine-grained version of dFdx."},
  {"label": "dFdyFine", "type": "function", "info": "Fine-grained version of dFdy."},
  {"label": "dFdxCoarse", "type": "function", "info": "Coarse-grained version of dFdx."},
  {"label": "dFdyCoarse", "type": "function", "info": "Coarse-grained version of dFdy."},
  {"label": "fwidth", "type": "function", "info": "Computes the sum of absolute derivatives in x and y."},
  {"label": "fwidthFine", "type": "function", "info": "Fine-grained version of fwidth."},
  {"label": "fwidthCoarse", "type": "function", "info": "Coarse-grained version of fwidth."},
  {"label": "gl_VertexID", "type": "variable", "info": "The index of the current vertex."},
  {"label": "gl_InstanceID", "type": "variable", "info": "The index of the current instance."},
  {"label": "gl_FragCoord", "type": "variable", "info": "The window-space coordinates of the current fragment."},
  {"label": "gl_FrontFacing", "type": "variable", "info": "Indicates if the fragment is front-facing."},
  {"label": "gl_PointCoord", "type": "variable", "info": "The coordinates of the current point fragment."},
  {"label": "gl_SampleID", "type": "variable", "info": "The sample index in multi-sampling."},
  {"label": "gl_SamplePosition", "type": "variable", "info": "The sample position for multi-sampling."},
  {"label": "gl_SampleMaskIn", "type": "variable", "info": "The sample mask for multi-sampling."},
  {"label": "gl_ClipDistance", "type": "variable", "info": "The clip distances for early fragment rejection."},
  {"label": "gl_FragDepth", "type": "variable", "info": "The depth value for the current fragment."}
]

